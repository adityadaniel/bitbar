fastlane_version "2.26.1"
default_platform :mac
chain = "travis.keychain"
key = ENV["encrypted_34de277e100a_key"]
iv = ENV["encrypted_34de277e100a_iv"]
pwd = ENV["CERTPWD"]

platform :mac do
  before_all do
    # ensure_git_status_clean
    cocoapods repo_update: true
    # enable_automatic_code_signing
    update_project_codesigning(
      path: "BitBar.xcodeproj",
      use_automatic_signing: false,
      team_id: "8Z44P9V4VF"
    )
  end

  desc "Runs all the tests"
  lane :test do
    scan scheme: "BitBar", clean: true
  end

  lane :import_keys do
    sh "cd .. && openssl aes-256-cbc -K #{key} -iv #{iv} -in Resources/bitbar.p12.enc -out bitbar.p12 -d"
    sh "cd .. && security create-keychain -p travis #{chain}"
    sh "cd .. && security import bitbar.p12 -A -k #{chain} -P '#{pwd}' -T /usr/bin/codesign"
    sh "cd .. && security import Resources/bitbar.cer -A -k #{chain} -T /usr/bin/codesign"
    sh "cd .. && security default-keychain -s #{chain}"
    sh "cd .. && security unlock-keychain -p travis #{chain}"
    sh "cd .. && security set-key-partition-list -S apple-tool:,apple: -s -k travis #{chain}"
    sh "cd .. && security set-keychain-settings -t 3600 -u #{chain}"
  end

  desc "Deploy a new version to the App Store"
  lane :build do
    gym
    zip path: "BitBar.app", output_path: "BitBar.zip"
    # sh "cd .. && ditto -c -k --sequesterRsrc --keepParent BitBar.app BitBar.zip"
  end

  after_all do |lane|
    sh "security delete-keychain #{chain}" if is_ci?
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end


  # TODO
  # increment_build_number / increment_version_number
  # add_git_tag
  # ensure_git_branch
  # push_git_tags
  #   github_release = set_github_release(
  #   repository_name: "fastlane/fastlane",
  #   api_token: ENV["GITHUB_TOKEN"],
  #   name: "Super New actions",
  #   tag_name: "v1.22.0",
  #   description: (File.read("changelog") rescue "No changelog provided"),
  #   commitish: "master",
  #   upload_assets: ["example_integration.ipa", "./pkg/built.gem"]
  # )

  lane :lint do
    swiftlint(mode: :lint)
  end

  lane :fix do
    swiftlint mode: :autocorrect
  end
end
